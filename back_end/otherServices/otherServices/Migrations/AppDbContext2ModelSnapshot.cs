// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using otherServices.Models;

#nullable disable

namespace otherServices.Migrations
{
    [DbContext(typeof(AppDbContext2))]
    partial class AppDbContext2ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReservedSaved", b =>
                {
                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_Id");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint")
                        .HasColumnName("Post_Id");

                    b.HasKey("TenantId", "PostId")
                        .HasName("PK__reserved__1370CC3C9E94BEED");

                    b.HasIndex("PostId");

                    b.ToTable("reserved_Saved", (string)null);
                });

            modelBuilder.Entity("otherServices.Models.Comment", b =>
                {
                    b.Property<long>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CommentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CommentId"));

                    b.Property<DateTime>("DateComment")
                        .HasColumnType("datetime")
                        .HasColumnName("date_comment");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint")
                        .HasColumnName("Post_Id");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_Id");

                    b.HasKey("CommentId")
                        .HasName("PK__Comments__99FC14DBFDFD4C38");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("otherServices.Models.Message", b =>
                {
                    b.Property<long>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("message_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MessageId"));

                    b.Property<DateTime>("DateMessge")
                        .HasColumnType("datetime")
                        .HasColumnName("date_messge");

                    b.Property<string>("Message1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Message");

                    b.Property<long>("ReceiverId")
                        .HasColumnType("bigint")
                        .HasColumnName("recieverId");

                    b.Property<long>("SenderId")
                        .HasColumnType("bigint")
                        .HasColumnName("senderId");

                    b.HasKey("MessageId")
                        .HasName("PK__messages__0BBC6ACE1FC3A57E");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("messages", (string)null);
                });

            modelBuilder.Entity("otherServices.Models.Post", b =>
                {
                    b.Property<long>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("post_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PostId"));

                    b.Property<DateTime>("DatePost")
                        .HasColumnType("datetime")
                        .HasColumnName("date_post");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<long>("FlagWaitingPost")
                        .HasColumnType("bigint")
                        .HasColumnName("flag_waiting_post");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LandlordId")
                        .HasColumnType("bigint")
                        .HasColumnName("Landlord_id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RentalStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("rental_status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("PostId")
                        .HasName("PK__posts__3ED48BBE6C5F48C0");

                    b.HasIndex("LandlordId");

                    b.ToTable("posts", (string)null);
                });

            modelBuilder.Entity("otherServices.Models.Proposal", b =>
                {
                    b.Property<long>("ProposalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProposalId"));

                    b.Property<DateTime>("EndRentalDate")
                        .HasColumnType("date");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint");

                    b.Property<string>("RentalStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartRentalDate")
                        .HasColumnType("date");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("ProposalId");

                    b.HasIndex("PostId");

                    b.HasIndex("TenantId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("otherServices.Models.SavedPost", b =>
                {
                    b.Property<long>("TenantId")
                        .HasColumnType("bigint")
                        .HasColumnName("tenant_Id");

                    b.Property<long>("PostId")
                        .HasColumnType("bigint")
                        .HasColumnName("Post_Id");

                    b.Property<DateTime?>("DateSaved")
                        .HasColumnType("datetime")
                        .HasColumnName("date_saved");

                    b.HasKey("TenantId", "PostId")
                        .HasName("PK__Saved_Po__1370CC3CF5ACF434");

                    b.HasIndex("PostId");

                    b.ToTable("Saved_Post", (string)null);
                });

            modelBuilder.Entity("otherServices.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("userId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fName");

                    b.Property<int>("FlagWaitingUser")
                        .HasColumnType("int")
                        .HasColumnName("flag_waiting_user");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lName");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Role_name");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userName");

                    b.HasKey("UserId")
                        .HasName("PK__Users__CB9A1CFFDCE0066F");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E6164944D8BF6")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ReservedSaved", b =>
                {
                    b.HasOne("otherServices.Models.Post", null)
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__reserved___Post___7D439ABD");

                    b.HasOne("otherServices.Models.User", null)
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .IsRequired()
                        .HasConstraintName("FK__reserved___tenan__7C4F7684");
                });

            modelBuilder.Entity("otherServices.Models.Comment", b =>
                {
                    b.HasOne("otherServices.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Comments_PostId");

                    b.HasOne("otherServices.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Comments_UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("otherServices.Models.Message", b =>
                {
                    b.HasOne("otherServices.Models.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .IsRequired()
                        .HasConstraintName("FK__messages__tenant__19DFD96B");

                    b.HasOne("otherServices.Models.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__messages__date_m__18EBB532");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("otherServices.Models.Post", b =>
                {
                    b.HasOne("otherServices.Models.User", "Landlord")
                        .WithMany("Posts")
                        .HasForeignKey("LandlordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__posts__date_post__66603565");

                    b.Navigation("Landlord");
                });

            modelBuilder.Entity("otherServices.Models.Proposal", b =>
                {
                    b.HasOne("otherServices.Models.Post", "Post")
                        .WithMany("Proposals")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("otherServices.Models.User", "User")
                        .WithMany("Proposals")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("otherServices.Models.SavedPost", b =>
                {
                    b.HasOne("otherServices.Models.Post", "Post")
                        .WithMany("SavedPosts")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Saved_Pos__Post___04E4BC85");

                    b.HasOne("otherServices.Models.User", "Tenant")
                        .WithMany("SavedPosts")
                        .HasForeignKey("TenantId")
                        .IsRequired()
                        .HasConstraintName("FK__Saved_Pos__tenan__03F0984C");

                    b.Navigation("Post");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("otherServices.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Proposals");

                    b.Navigation("SavedPosts");
                });

            modelBuilder.Entity("otherServices.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");

                    b.Navigation("Proposals");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SavedPosts");

                    b.Navigation("SentMessages");
                });
#pragma warning restore 612, 618
        }
    }
}

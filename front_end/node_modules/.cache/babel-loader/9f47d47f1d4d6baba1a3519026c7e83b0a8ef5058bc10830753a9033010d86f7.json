{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\IA\\\\IA-pro\\\\front_end\\\\src\\\\pages\\\\SavedPosts.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropertyCard from '../components/PropertyCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SavedPosts = () => {\n  _s();\n  const [savedProperties, setSavedProperties] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchSavedProperties = async () => {\n      try {\n        const res = await axios.get('/api/properties/saved');\n        setSavedProperties(res.data);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSavedProperties();\n  }, []);\n  const removeSavedProperty = async propertyId => {\n    try {\n      await axios.delete(`/api/properties/${propertyId}/save`);\n      setSavedProperties(savedProperties.filter(prop => prop._id !== propertyId));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading saved properties...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"saved-posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Saved Properties\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), savedProperties.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-properties-grid\",\n      children: savedProperties.map(property => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-property-item\",\n        children: [/*#__PURE__*/_jsxDEV(PropertyCard, {\n          property: property\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeSavedProperty(property._id),\n          className: \"remove-btn\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, property._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You haven't saved any properties yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SavedPosts, \"gIezAENnaYL0gttWpVRVEX52kyc=\");\n_c = SavedPosts;\nexport default SavedPosts;\nvar _c;\n$RefreshReg$(_c, \"SavedPosts\");","map":{"version":3,"names":["useState","useEffect","axios","PropertyCard","jsxDEV","_jsxDEV","SavedPosts","_s","savedProperties","setSavedProperties","loading","setLoading","fetchSavedProperties","res","get","data","err","console","error","removeSavedProperty","propertyId","delete","filter","prop","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","property","onClick","_c","$RefreshReg$"],"sources":["D:/web/IA/IA-pro/front_end/src/pages/SavedPosts.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PropertyCard from '../components/PropertyCard';\r\n\r\nconst SavedPosts = () => {\r\n  const [savedProperties, setSavedProperties] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchSavedProperties = async () => {\r\n      try {\r\n        const res = await axios.get('/api/properties/saved');\r\n        setSavedProperties(res.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchSavedProperties();\r\n  }, []);\r\n\r\n  const removeSavedProperty = async (propertyId) => {\r\n    try {\r\n      await axios.delete(`/api/properties/${propertyId}/save`);\r\n      setSavedProperties(savedProperties.filter(prop => prop._id !== propertyId));\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading saved properties...</div>;\r\n\r\n  return (\r\n    <div className=\"saved-posts\">\r\n      <h1>Your Saved Properties</h1>\r\n      \r\n      {savedProperties.length > 0 ? (\r\n        <div className=\"saved-properties-grid\">\r\n          {savedProperties.map(property => (\r\n            <div key={property._id} className=\"saved-property-item\">\r\n              <PropertyCard property={property} />\r\n              <button \r\n                onClick={() => removeSavedProperty(property._id)}\r\n                className=\"remove-btn\"\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>You haven't saved any properties yet</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SavedPosts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
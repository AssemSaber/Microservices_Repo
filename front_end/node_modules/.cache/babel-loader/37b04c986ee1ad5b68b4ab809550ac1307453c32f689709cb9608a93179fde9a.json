{"ast":null,"code":"// import { createContext, useState, useEffect } from 'react';\n// import axios from 'axios';\n// import axios from '../services/api';\n\n// const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const checkAuth = async () => {\n//       const storedProfile = localStorage.getItem('profile');\n//       if (storedProfile) {\n//         try {\n//           const { token, user } = JSON.parse(storedProfile);\n//           const res = await axios.get('/api/auth/check', {\n//             headers: {\n//               Authorization: `Bearer ${token}`,\n//             },\n//           });\n//           setUser(res.data.user || user);\n//         } catch (err) {\n//           setUser(null);\n//           localStorage.removeItem('profile');\n//         }\n//       } else {\n//         setUser(null);\n//       }\n//       setLoading(false);\n//     };\n//     checkAuth();\n//   }, []);\n\n//   const login = async (credentials) => {\n//     try {\n//       const res = await axios.post('/api/auth/login', credentials);\n//       const { token, user } = res.data;\n\n//       localStorage.setItem('profile', JSON.stringify({ token, user }));\n//       setUser(user);\n//       return { token, user };\n//     } catch (error) {\n//       throw error;\n//     }\n//   };\n\n//   const register = async (userData) => {\n//     try {\n//       const res = await axios.post('https://localhost:44357/api/Auth/register', userData, {\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n//       return res.data;\n//     } catch (error) {\n//       throw error;\n//     }\n//   };\n\n//   const logout = async () => {\n//     await axios.post('/api/auth/logout');\n//     localStorage.removeItem('profile');\n//     setUser(null);\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, loading, login, register, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export default AuthContext;","map":{"version":3,"names":[],"sources":["D:/web/IA/IA-pro/front_end/src/context/AuthContext.js"],"sourcesContent":["// import { createContext, useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import axios from '../services/api';\r\n\r\n\r\n// const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//   const [user, setUser] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const checkAuth = async () => {\r\n//       const storedProfile = localStorage.getItem('profile');\r\n//       if (storedProfile) {\r\n//         try {\r\n//           const { token, user } = JSON.parse(storedProfile);\r\n//           const res = await axios.get('/api/auth/check', {\r\n//             headers: {\r\n//               Authorization: `Bearer ${token}`,\r\n//             },\r\n//           });\r\n//           setUser(res.data.user || user);\r\n//         } catch (err) {\r\n//           setUser(null);\r\n//           localStorage.removeItem('profile');\r\n//         }\r\n//       } else {\r\n//         setUser(null);\r\n//       }\r\n//       setLoading(false);\r\n//     };\r\n//     checkAuth();\r\n//   }, []);\r\n\r\n//   const login = async (credentials) => {\r\n//     try {\r\n//       const res = await axios.post('/api/auth/login', credentials);\r\n//       const { token, user } = res.data;\r\n\r\n//       localStorage.setItem('profile', JSON.stringify({ token, user }));\r\n//       setUser(user);\r\n//       return { token, user };\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   };\r\n\r\n//   const register = async (userData) => {\r\n//     try {\r\n//       const res = await axios.post('https://localhost:44357/api/Auth/register', userData, {\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n//       return res.data;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   };\r\n\r\n//   const logout = async () => {\r\n//     await axios.post('/api/auth/logout');\r\n//     localStorage.removeItem('profile');\r\n//     setUser(null);\r\n//   };\r\n\r\n//   return (\r\n//     <AuthContext.Provider value={{ user, loading, login, register, logout }}>\r\n//       {children}\r\n//     </AuthContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default AuthContext;\r\n"],"mappings":"AAAA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api',\n  timeout: 10000\n});\nAPI.interceptors.request.use(req => {\n  const profile = localStorage.getItem('profile');\n  if (profile) {\n    req.headers.Authorization = `Bearer ${JSON.parse(profile).token}`;\n  }\n  return req;\n}, error => {\n  return Promise.reject(error);\n});\nAPI.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    if (error.response.status === 401) {\n      localStorage.removeItem('profile');\n      window.location.href = '/login?session_expired=true';\n    }\n    if (error.response.status === 403) {\n      window.location.href = '/?error=forbidden';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// ==================== Authentication ====================\nexport const signIn = formData => API.post('/auth/login', formData);\nexport const signUp = formData => API.post('/auth/register', formData);\nexport const verifyToken = () => API.get('/auth/verify');\nexport const verifyLandlord = () => API.get('/landlord/verify');\nexport const verifyAdmin = () => API.get('/admin/verify');\nexport const verifyTenant = () => API.get('/tenant/verify');\nexport const logout = () => API.post('/auth/logout');\nexport const requestPasswordReset = email => API.post('/auth/forgot-password', {\n  email\n});\nexport const resetPassword = (token, newPassword) => API.post('/auth/reset-password', {\n  token,\n  newPassword\n});\n\n// ==================== Properties ====================\nexport const fetchProperties = (searchParams = {}) => {\n  const params = new URLSearchParams();\n  Object.entries(searchParams).forEach(([key, value]) => {\n    if (value) params.append(key, value);\n  });\n  return API.get('/properties', {\n    params\n  });\n};\nexport const fetchFeaturedProperties = () => API.get('/properties/featured');\nexport const fetchProperty = id => API.get(`/properties/${id}`);\nexport const createProperty = propertyData => {\n  const formData = new FormData();\n  Object.entries(propertyData).forEach(([key, value]) => {\n    if (key === 'images') {\n      value.forEach(img => formData.append('images', img));\n    } else {\n      formData.append(key, value);\n    }\n  });\n  return API.post('/properties', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const updateProperty = (id, propertyData) => {\n  const formData = new FormData();\n  Object.entries(propertyData).forEach(([key, value]) => {\n    if (key === 'images') {\n      value.forEach(img => formData.append('images', img));\n    } else if (key === 'existingImages') {\n      value.forEach(img => formData.append('existingImages', img));\n    } else {\n      formData.append(key, value);\n    }\n  });\n  return API.patch(`/properties/${id}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const deleteProperty = id => API.delete(`/properties/${id}`);\nexport const incrementPropertyViews = id => API.put(`/properties/${id}/views`);\n\n// ==================== Property Status Management ====================\nexport const updatePropertyStatus = (id, status, transactionData = {}) => {\n  return API.patch(`/properties/${id}/status`, {\n    status,\n    ...transactionData\n  });\n};\nexport const markAsSold = (id, buyerId, salePrice) => {\n  return updatePropertyStatus(id, 'sold', {\n    buyerId,\n    salePrice\n  });\n};\nexport const markAsRented = (id, tenantId, rentPrice) => {\n  return updatePropertyStatus(id, 'rented', {\n    tenantId,\n    rentPrice\n  });\n};\nexport const reopenProperty = id => {\n  return updatePropertyStatus(id, 'available');\n};\nexport const getPropertyStatusHistory = id => {\n  return API.get(`/properties/${id}/status-history`);\n};\n\n// // ==================== Advanced Property Search ====================\n// export const searchProperties = ({\n//   minPrice,\n//   maxPrice,\n//   location,\n//   propertyType,\n//   bedrooms,\n//   bathrooms,\n//   amenities,\n//   sortBy = 'createdAt',\n//   sortOrder = 'desc',\n//   page = 1,\n//   limit = 10,\n//   status = 'available'\n// }) => {\n//   const params = new URLSearchParams();\n\n//   if (minPrice) params.append('minPrice', minPrice);\n//   if (maxPrice) params.append('maxPrice', maxPrice);\n//   if (location) params.append('location', location);\n//   if (propertyType) params.append('propertyType', propertyType);\n//   if (bedrooms) params.append('bedrooms', bedrooms);\n//   if (bathrooms) params.append('bathrooms', bathrooms);\n//   if (amenities) params.append('amenities', amenities.join(','));\n//   if (sortBy) params.append('sortBy', sortBy);\n//   if (sortOrder) params.append('sortOrder', sortOrder);\n//   if (page) params.append('page', page);\n//   if (limit) params.append('limit', limit);\n//   if (status) params.append('status', status);\n\n//   return API.get('/properties/search', { params });\n// };\n\n// export const searchPropertiesByPriceRange = (minPrice, maxPrice) => {\n//   return API.get('/properties/search', {\n//     params: {\n//       minPrice,\n//       maxPrice,\n//       sortBy: 'price',\n//       sortOrder: 'asc'\n//     }\n//   });\n// };\n\n// export const searchPropertiesByLocation = (location) => {\n//   return API.get('/properties/search', {\n//     params: { location }\n//   });\n// };\n\n// export const getPropertyFilters = () => {\n//   return API.get('/properties/filters');\n// };\n\n// export const getPopularSearches = () => {\n//   return API.get('/properties/popular-searches');\n// };\n\n// export const getRecentSearches = () => {\n//   return API.get('/users/me/recent-searches');\n// };\n\n// export const saveSearch = (searchParams) => {\n//   return API.post('/users/me/saved-searches', searchParams);\n// };\n\n// export const getSavedSearches = () => {\n//   return API.get('/users/me/saved-searches');\n// };\n\n// ==================== Saved Properties ====================\nexport const saveProperty = id => API.post(`/properties/${id}/save`);\nexport const unsaveProperty = id => API.delete(`/properties/${id}/save`);\nexport const fetchSavedProperties = () => API.get('/properties/saved');\nexport const checkSavedStatus = id => API.get(`/properties/${id}/saved-status`);\n\n// ==================== Proposals & Applications ====================\nexport const submitProposal = (id, proposalData) => {\n  const formData = new FormData();\n  formData.append('message', proposalData.message);\n  proposalData.documents.forEach(doc => formData.append('documents', doc));\n  return API.post(`/properties/${id}/proposals`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const fetchProposals = id => API.get(`/properties/${id}/proposals`);\nexport const fetchMyProposals = () => API.get('/proposals/me');\nexport const fetchLandlordProposals = () => API.get('/landlord/proposals');\nexport const respondToProposal = (id, action) => API.patch(`/proposals/${id}`, {\n  action\n});\nexport const cancelProposal = id => API.delete(`/proposals/${id}`);\nexport const acceptProposalAndUpdateProperty = proposalId => API.patch(`/proposals/${proposalId}/accept-and-update`);\n\n// ==================== Comments ====================\nexport const fetchPropertyComments = id => API.get(`/properties/${id}/comments`);\nexport const addPropertyComment = (id, comment) => API.post(`/properties/${id}/comments`, {\n  text: comment\n});\nexport const deleteComment = id => API.delete(`/comments/${id}`);\n\n// ==================== Messages ====================\n\nexport const fetchConversations = () => API.get('/api/messages/conversations');\nexport const fetchMessages = conversationId => API.get(`/api/messages/${conversationId}`);\nexport const sendMessage = messageData => API.post('/api/messages/send', messageData);\nexport const startNewConversation = (recipientId, message) => API.post('/api/messages/new', {\n  recipientId,\n  text: message\n});\nexport const markAsRead = conversationId => API.patch(`/api/messages/${conversationId}/read`);\nexport const getUnreadCount = () => API.get('/api/messages/unread-count');\n\n// ==================== User Management ====================\nexport const fetchUserProfile = () => API.get('/users/me');\nexport const updateProfile = profileData => {\n  const formData = new FormData();\n  Object.entries(profileData).forEach(([key, value]) => {\n    if (key === 'avatar' && value) {\n      formData.append('avatar', value);\n    } else {\n      formData.append(key, value);\n    }\n  });\n  return API.patch('/users/me', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const uploadDocuments = documents => {\n  const formData = new FormData();\n  documents.forEach(doc => formData.append('documents', doc));\n  return API.post('/users/documents', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\n// ==================== Transactions ====================\nexport const createTransaction = transactionData => API.post('/transactions', transactionData);\nexport const getPropertyTransactions = propertyId => API.get(`/properties/${propertyId}/transactions`);\nexport const getUserTransactions = () => API.get('/users/transactions');\n\n// ==================== Admin ====================\nexport const fetchPendingLandlords = () => API.get('/admin/pending-landlords');\nexport const fetchPendingProperties = () => API.get('/admin/pending-properties');\nexport const fetchLandlordApplication = id => API.get(`/admin/landlord-applications/${id}`);\nexport const approveLandlord = id => API.patch(`/admin/landlords/${id}/approve`);\nexport const rejectLandlord = id => API.o(`/admin/landlords/${id}/reject`);\nexport const approveProperty = id => API.patch(`/admin/properties/${id}/approve`);\nexport const rejectProperty = id => API.patch(`/admin/properties/${id}/reject`);\nexport const fetchAllUsers = () => API.get('/admin/users');\nexport const updateUserStatus = (id, status) => API.patch(`/admin/users/${id}`, {\n  status\n});\nexport const fetchDashboardStats = () => API.get('/admin/dashboard/stats');\nexport const fetchRecentActivity = () => API.get('/admin/dashboard/activity');\n\n// ==================== Tenant ====================\nexport const fetchTenantDashboard = () => API.get('/tenant/dashboard');\nexport const fetchTenantApplications = status => API.get(`/tenant/applications?status=${status}`);\nexport const fetchRecentApplications = () => API.get('/tenant/applications/recent');\nexport const fetchSavedPropertiesPreview = () => API.get('/tenant/saved-properties/preview');\n\n// ==================== Landlord ====================\nexport const fetchLandlordDashboard = () => API.get('/landlord/dashboard');\nexport const fetchLandlordProperties = status => API.get(`/landlord/properties?status=${status}`);\nexport const fetchLandlordStats = () => API.get('/landlord/dashboard/stats');\nexport const fetchLandlordActivity = () => API.get('/landlord/dashboard/activity');\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_BASE_URL","timeout","interceptors","request","use","req","profile","localStorage","getItem","headers","Authorization","JSON","parse","token","error","Promise","reject","response","status","removeItem","window","location","href","signIn","formData","post","signUp","verifyToken","get","verifyLandlord","verifyAdmin","verifyTenant","logout","requestPasswordReset","email","resetPassword","newPassword","fetchProperties","searchParams","params","URLSearchParams","Object","entries","forEach","key","value","append","fetchFeaturedProperties","fetchProperty","id","createProperty","propertyData","FormData","img","updateProperty","patch","deleteProperty","delete","incrementPropertyViews","put","updatePropertyStatus","transactionData","markAsSold","buyerId","salePrice","markAsRented","tenantId","rentPrice","reopenProperty","getPropertyStatusHistory","saveProperty","unsaveProperty","fetchSavedProperties","checkSavedStatus","submitProposal","proposalData","message","documents","doc","fetchProposals","fetchMyProposals","fetchLandlordProposals","respondToProposal","action","cancelProposal","acceptProposalAndUpdateProperty","proposalId","fetchPropertyComments","addPropertyComment","comment","text","deleteComment","fetchConversations","fetchMessages","conversationId","sendMessage","messageData","startNewConversation","recipientId","markAsRead","getUnreadCount","fetchUserProfile","updateProfile","profileData","uploadDocuments","createTransaction","getPropertyTransactions","propertyId","getUserTransactions","fetchPendingLandlords","fetchPendingProperties","fetchLandlordApplication","approveLandlord","rejectLandlord","o","approveProperty","rejectProperty","fetchAllUsers","updateUserStatus","fetchDashboardStats","fetchRecentActivity","fetchTenantDashboard","fetchTenantApplications","fetchRecentApplications","fetchSavedPropertiesPreview","fetchLandlordDashboard","fetchLandlordProperties","fetchLandlordStats","fetchLandlordActivity"],"sources":["D:/web/IA/IA-pro/front_end/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ \r\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api',\r\n  timeout: 10000 \r\n});\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  const profile = localStorage.getItem('profile');\r\n  if (profile) {\r\n    req.headers.Authorization = `Bearer ${JSON.parse(profile).token}`;\r\n  }\r\n  return req;\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response) {\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem('profile');\r\n        window.location.href = '/login?session_expired=true';\r\n      }\r\n      if (error.response.status === 403) {\r\n        window.location.href = '/?error=forbidden';\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ==================== Authentication ====================\r\nexport const signIn = (formData) => API.post('/auth/login', formData);\r\nexport const signUp = (formData) => API.post('/auth/register', formData);\r\nexport const verifyToken = () => API.get('/auth/verify');\r\nexport const verifyLandlord = () => API.get('/landlord/verify');\r\nexport const verifyAdmin = () => API.get('/admin/verify');\r\nexport const verifyTenant = () => API.get('/tenant/verify');\r\nexport const logout = () => API.post('/auth/logout');\r\nexport const requestPasswordReset = (email) => API.post('/auth/forgot-password', { email });\r\nexport const resetPassword = (token, newPassword) => API.post('/auth/reset-password', { token, newPassword });\r\n\r\n// ==================== Properties ====================\r\nexport const fetchProperties = (searchParams = {}) => {\r\n  const params = new URLSearchParams();\r\n  Object.entries(searchParams).forEach(([key, value]) => {\r\n    if (value) params.append(key, value);\r\n  });\r\n  return API.get('/properties', { params });\r\n};\r\n\r\nexport const fetchFeaturedProperties = () => API.get('/properties/featured');\r\nexport const fetchProperty = (id) => API.get(`/properties/${id}`);\r\nexport const createProperty = (propertyData) => {\r\n  const formData = new FormData();\r\n  Object.entries(propertyData).forEach(([key, value]) => {\r\n    if (key === 'images') {\r\n      value.forEach(img => formData.append('images', img));\r\n    } else {\r\n      formData.append(key, value);\r\n    }\r\n  });\r\n  return API.post('/properties', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateProperty = (id, propertyData) => {\r\n  const formData = new FormData();\r\n  Object.entries(propertyData).forEach(([key, value]) => {\r\n    if (key === 'images') {\r\n      value.forEach(img => formData.append('images', img));\r\n    } else if (key === 'existingImages') {\r\n      value.forEach(img => formData.append('existingImages', img));\r\n    } else {\r\n      formData.append(key, value);\r\n    }\r\n  });\r\n  return API.patch(`/properties/${id}`, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n};\r\n\r\nexport const deleteProperty = (id) => API.delete(`/properties/${id}`);\r\nexport const incrementPropertyViews = (id) => API.put(`/properties/${id}/views`);\r\n\r\n\r\n// ==================== Property Status Management ====================\r\nexport const updatePropertyStatus = (id, status, transactionData = {}) => {\r\n  return API.patch(`/properties/${id}/status`, { status, ...transactionData });\r\n};\r\n\r\nexport const markAsSold = (id, buyerId, salePrice) => {\r\n  return updatePropertyStatus(id, 'sold', { buyerId, salePrice });\r\n};\r\n\r\nexport const markAsRented = (id, tenantId, rentPrice) => {\r\n  return updatePropertyStatus(id, 'rented', { tenantId, rentPrice });\r\n};\r\n\r\nexport const reopenProperty = (id) => {\r\n  return updatePropertyStatus(id, 'available');\r\n};\r\n\r\nexport const getPropertyStatusHistory = (id) => {\r\n  return API.get(`/properties/${id}/status-history`);\r\n};\r\n\r\n\r\n// // ==================== Advanced Property Search ====================\r\n// export const searchProperties = ({\r\n//   minPrice,\r\n//   maxPrice,\r\n//   location,\r\n//   propertyType,\r\n//   bedrooms,\r\n//   bathrooms,\r\n//   amenities,\r\n//   sortBy = 'createdAt',\r\n//   sortOrder = 'desc',\r\n//   page = 1,\r\n//   limit = 10,\r\n//   status = 'available'\r\n// }) => {\r\n//   const params = new URLSearchParams();\r\n  \r\n//   if (minPrice) params.append('minPrice', minPrice);\r\n//   if (maxPrice) params.append('maxPrice', maxPrice);\r\n//   if (location) params.append('location', location);\r\n//   if (propertyType) params.append('propertyType', propertyType);\r\n//   if (bedrooms) params.append('bedrooms', bedrooms);\r\n//   if (bathrooms) params.append('bathrooms', bathrooms);\r\n//   if (amenities) params.append('amenities', amenities.join(','));\r\n//   if (sortBy) params.append('sortBy', sortBy);\r\n//   if (sortOrder) params.append('sortOrder', sortOrder);\r\n//   if (page) params.append('page', page);\r\n//   if (limit) params.append('limit', limit);\r\n//   if (status) params.append('status', status);\r\n\r\n//   return API.get('/properties/search', { params });\r\n// };\r\n\r\n// export const searchPropertiesByPriceRange = (minPrice, maxPrice) => {\r\n//   return API.get('/properties/search', {\r\n//     params: {\r\n//       minPrice,\r\n//       maxPrice,\r\n//       sortBy: 'price',\r\n//       sortOrder: 'asc'\r\n//     }\r\n//   });\r\n// };\r\n\r\n// export const searchPropertiesByLocation = (location) => {\r\n//   return API.get('/properties/search', {\r\n//     params: { location }\r\n//   });\r\n// };\r\n\r\n// export const getPropertyFilters = () => {\r\n//   return API.get('/properties/filters');\r\n// };\r\n\r\n// export const getPopularSearches = () => {\r\n//   return API.get('/properties/popular-searches');\r\n// };\r\n\r\n// export const getRecentSearches = () => {\r\n//   return API.get('/users/me/recent-searches');\r\n// };\r\n\r\n// export const saveSearch = (searchParams) => {\r\n//   return API.post('/users/me/saved-searches', searchParams);\r\n// };\r\n\r\n// export const getSavedSearches = () => {\r\n//   return API.get('/users/me/saved-searches');\r\n// };\r\n\r\n// ==================== Saved Properties ====================\r\nexport const saveProperty = (id) => API.post(`/properties/${id}/save`);\r\nexport const unsaveProperty = (id) => API.delete(`/properties/${id}/save`);\r\nexport const fetchSavedProperties = () => API.get('/properties/saved');\r\nexport const checkSavedStatus = (id) => API.get(`/properties/${id}/saved-status`);\r\n\r\n// ==================== Proposals & Applications ====================\r\nexport const submitProposal = (id, proposalData) => {\r\n  const formData = new FormData();\r\n  formData.append('message', proposalData.message);\r\n  proposalData.documents.forEach(doc => formData.append('documents', doc));\r\n  \r\n  return API.post(`/properties/${id}/proposals`, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n};\r\n\r\nexport const fetchProposals = (id) => API.get(`/properties/${id}/proposals`);\r\nexport const fetchMyProposals = () => API.get('/proposals/me');\r\nexport const fetchLandlordProposals = () => API.get('/landlord/proposals');\r\nexport const respondToProposal = (id, action) => API.patch(`/proposals/${id}`, { action });\r\nexport const cancelProposal = (id) => API.delete(`/proposals/${id}`);\r\nexport const acceptProposalAndUpdateProperty = (proposalId) => \r\n  API.patch(`/proposals/${proposalId}/accept-and-update`);\r\n\r\n// ==================== Comments ====================\r\nexport const fetchPropertyComments = (id) => API.get(`/properties/${id}/comments`);\r\nexport const addPropertyComment = (id, comment) => API.post(`/properties/${id}/comments`, { text: comment });\r\nexport const deleteComment = (id) => API.delete(`/comments/${id}`);\r\n\r\n// ==================== Messages ====================\r\n\r\nexport const fetchConversations = () => API.get('/api/messages/conversations');\r\nexport const fetchMessages = (conversationId) => API.get(`/api/messages/${conversationId}`);\r\nexport const sendMessage = (messageData) => API.post('/api/messages/send', messageData);\r\n\r\nexport const startNewConversation = (recipientId, message) =>\r\n  API.post('/api/messages/new', { recipientId, text: message });\r\nexport const markAsRead = (conversationId) =>\r\n  API.patch(`/api/messages/${conversationId}/read`);\r\n\r\nexport const getUnreadCount = () => API.get('/api/messages/unread-count');\r\n\r\n\r\n// ==================== User Management ====================\r\nexport const fetchUserProfile = () => API.get('/users/me');\r\nexport const updateProfile = (profileData) => {\r\n  const formData = new FormData();\r\n  Object.entries(profileData).forEach(([key, value]) => {\r\n    if (key === 'avatar' && value) {\r\n      formData.append('avatar', value);\r\n    } else {\r\n      formData.append(key, value);\r\n    }\r\n  });\r\n  return API.patch('/users/me', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n};\r\n\r\nexport const uploadDocuments = (documents) => {\r\n  const formData = new FormData();\r\n  documents.forEach(doc => formData.append('documents', doc));\r\n  return API.post('/users/documents', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n};\r\n\r\n\r\n// ==================== Transactions ====================\r\nexport const createTransaction = (transactionData) => API.post('/transactions', transactionData);\r\nexport const getPropertyTransactions = (propertyId) => API.get(`/properties/${propertyId}/transactions`);\r\nexport const getUserTransactions = () => API.get('/users/transactions');\r\n\r\n\r\n// ==================== Admin ====================\r\nexport const fetchPendingLandlords = () => API.get('/admin/pending-landlords');\r\nexport const fetchPendingProperties = () => API.get('/admin/pending-properties');\r\nexport const fetchLandlordApplication = (id) => API.get(`/admin/landlord-applications/${id}`);\r\nexport const approveLandlord = (id) => API.patch(`/admin/landlords/${id}/approve`);\r\nexport const rejectLandlord = (id) => API.o(`/admin/landlords/${id}/reject`);\r\nexport const approveProperty = (id) => API.patch(`/admin/properties/${id}/approve`);\r\nexport const rejectProperty = (id) => API.patch(`/admin/properties/${id}/reject`);\r\nexport const fetchAllUsers = () => API.get('/admin/users');\r\nexport const updateUserStatus = (id, status) => API.patch(`/admin/users/${id}`, { status });\r\nexport const fetchDashboardStats = () => API.get('/admin/dashboard/stats');\r\nexport const fetchRecentActivity = () => API.get('/admin/dashboard/activity');\r\n\r\n// ==================== Tenant ====================\r\nexport const fetchTenantDashboard = () => API.get('/tenant/dashboard');\r\nexport const fetchTenantApplications = (status) => API.get(`/tenant/applications?status=${status}`);\r\nexport const fetchRecentApplications = () => API.get('/tenant/applications/recent');\r\nexport const fetchSavedPropertiesPreview = () => API.get('/tenant/saved-properties/preview');\r\n\r\n// ==================== Landlord ====================\r\nexport const fetchLandlordDashboard = () => API.get('/landlord/dashboard');\r\nexport const fetchLandlordProperties = (status) => API.get(`/landlord/properties?status=${status}`);\r\nexport const fetchLandlordStats = () => API.get('/landlord/dashboard/stats');\r\nexport const fetchLandlordActivity = () => API.get('/landlord/dashboard/activity');\r\n\r\nexport default API;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,2BAA2B;EAC1EC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EACpC,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAC/C,IAAIF,OAAO,EAAE;IACXD,GAAG,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUC,IAAI,CAACC,KAAK,CAACN,OAAO,CAAC,CAACO,KAAK,EAAE;EACnE;EACA,OAAOR,GAAG;AACZ,CAAC,EAAGS,KAAK,IAAK;EACZ,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEFnB,GAAG,CAACO,YAAY,CAACe,QAAQ,CAACb,GAAG,CAC1Ba,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACjCX,YAAY,CAACY,UAAU,CAAC,SAAS,CAAC;MAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,6BAA6B;IACtD;IACA,IAAIR,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACjCE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mBAAmB;IAC5C;EACF;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMS,MAAM,GAAIC,QAAQ,IAAK7B,GAAG,CAAC8B,IAAI,CAAC,aAAa,EAAED,QAAQ,CAAC;AACrE,OAAO,MAAME,MAAM,GAAIF,QAAQ,IAAK7B,GAAG,CAAC8B,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;AACxE,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAMhC,GAAG,CAACiC,GAAG,CAAC,cAAc,CAAC;AACxD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAMlC,GAAG,CAACiC,GAAG,CAAC,kBAAkB,CAAC;AAC/D,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAMnC,GAAG,CAACiC,GAAG,CAAC,eAAe,CAAC;AACzD,OAAO,MAAMG,YAAY,GAAGA,CAAA,KAAMpC,GAAG,CAACiC,GAAG,CAAC,gBAAgB,CAAC;AAC3D,OAAO,MAAMI,MAAM,GAAGA,CAAA,KAAMrC,GAAG,CAAC8B,IAAI,CAAC,cAAc,CAAC;AACpD,OAAO,MAAMQ,oBAAoB,GAAIC,KAAK,IAAKvC,GAAG,CAAC8B,IAAI,CAAC,uBAAuB,EAAE;EAAES;AAAM,CAAC,CAAC;AAC3F,OAAO,MAAMC,aAAa,GAAGA,CAACtB,KAAK,EAAEuB,WAAW,KAAKzC,GAAG,CAAC8B,IAAI,CAAC,sBAAsB,EAAE;EAAEZ,KAAK;EAAEuB;AAAY,CAAC,CAAC;;AAE7G;AACA,OAAO,MAAMC,eAAe,GAAGA,CAACC,YAAY,GAAG,CAAC,CAAC,KAAK;EACpD,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpCC,MAAM,CAACC,OAAO,CAACJ,YAAY,CAAC,CAACK,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;IACrD,IAAIA,KAAK,EAAEN,MAAM,CAACO,MAAM,CAACF,GAAG,EAAEC,KAAK,CAAC;EACtC,CAAC,CAAC;EACF,OAAOlD,GAAG,CAACiC,GAAG,CAAC,aAAa,EAAE;IAAEW;EAAO,CAAC,CAAC;AAC3C,CAAC;AAED,OAAO,MAAMQ,uBAAuB,GAAGA,CAAA,KAAMpD,GAAG,CAACiC,GAAG,CAAC,sBAAsB,CAAC;AAC5E,OAAO,MAAMoB,aAAa,GAAIC,EAAE,IAAKtD,GAAG,CAACiC,GAAG,CAAC,eAAeqB,EAAE,EAAE,CAAC;AACjE,OAAO,MAAMC,cAAc,GAAIC,YAAY,IAAK;EAC9C,MAAM3B,QAAQ,GAAG,IAAI4B,QAAQ,CAAC,CAAC;EAC/BX,MAAM,CAACC,OAAO,CAACS,YAAY,CAAC,CAACR,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;IACrD,IAAID,GAAG,KAAK,QAAQ,EAAE;MACpBC,KAAK,CAACF,OAAO,CAACU,GAAG,IAAI7B,QAAQ,CAACsB,MAAM,CAAC,QAAQ,EAAEO,GAAG,CAAC,CAAC;IACtD,CAAC,MAAM;MACL7B,QAAQ,CAACsB,MAAM,CAACF,GAAG,EAAEC,KAAK,CAAC;IAC7B;EACF,CAAC,CAAC;EACF,OAAOlD,GAAG,CAAC8B,IAAI,CAAC,aAAa,EAAED,QAAQ,EAAE;IACvCf,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAM6C,cAAc,GAAGA,CAACL,EAAE,EAAEE,YAAY,KAAK;EAClD,MAAM3B,QAAQ,GAAG,IAAI4B,QAAQ,CAAC,CAAC;EAC/BX,MAAM,CAACC,OAAO,CAACS,YAAY,CAAC,CAACR,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;IACrD,IAAID,GAAG,KAAK,QAAQ,EAAE;MACpBC,KAAK,CAACF,OAAO,CAACU,GAAG,IAAI7B,QAAQ,CAACsB,MAAM,CAAC,QAAQ,EAAEO,GAAG,CAAC,CAAC;IACtD,CAAC,MAAM,IAAIT,GAAG,KAAK,gBAAgB,EAAE;MACnCC,KAAK,CAACF,OAAO,CAACU,GAAG,IAAI7B,QAAQ,CAACsB,MAAM,CAAC,gBAAgB,EAAEO,GAAG,CAAC,CAAC;IAC9D,CAAC,MAAM;MACL7B,QAAQ,CAACsB,MAAM,CAACF,GAAG,EAAEC,KAAK,CAAC;IAC7B;EACF,CAAC,CAAC;EACF,OAAOlD,GAAG,CAAC4D,KAAK,CAAC,eAAeN,EAAE,EAAE,EAAEzB,QAAQ,EAAE;IAC9Cf,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAM+C,cAAc,GAAIP,EAAE,IAAKtD,GAAG,CAAC8D,MAAM,CAAC,eAAeR,EAAE,EAAE,CAAC;AACrE,OAAO,MAAMS,sBAAsB,GAAIT,EAAE,IAAKtD,GAAG,CAACgE,GAAG,CAAC,eAAeV,EAAE,QAAQ,CAAC;;AAGhF;AACA,OAAO,MAAMW,oBAAoB,GAAGA,CAACX,EAAE,EAAE/B,MAAM,EAAE2C,eAAe,GAAG,CAAC,CAAC,KAAK;EACxE,OAAOlE,GAAG,CAAC4D,KAAK,CAAC,eAAeN,EAAE,SAAS,EAAE;IAAE/B,MAAM;IAAE,GAAG2C;EAAgB,CAAC,CAAC;AAC9E,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAACb,EAAE,EAAEc,OAAO,EAAEC,SAAS,KAAK;EACpD,OAAOJ,oBAAoB,CAACX,EAAE,EAAE,MAAM,EAAE;IAAEc,OAAO;IAAEC;EAAU,CAAC,CAAC;AACjE,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAChB,EAAE,EAAEiB,QAAQ,EAAEC,SAAS,KAAK;EACvD,OAAOP,oBAAoB,CAACX,EAAE,EAAE,QAAQ,EAAE;IAAEiB,QAAQ;IAAEC;EAAU,CAAC,CAAC;AACpE,CAAC;AAED,OAAO,MAAMC,cAAc,GAAInB,EAAE,IAAK;EACpC,OAAOW,oBAAoB,CAACX,EAAE,EAAE,WAAW,CAAC;AAC9C,CAAC;AAED,OAAO,MAAMoB,wBAAwB,GAAIpB,EAAE,IAAK;EAC9C,OAAOtD,GAAG,CAACiC,GAAG,CAAC,eAAeqB,EAAE,iBAAiB,CAAC;AACpD,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO,MAAMqB,YAAY,GAAIrB,EAAE,IAAKtD,GAAG,CAAC8B,IAAI,CAAC,eAAewB,EAAE,OAAO,CAAC;AACtE,OAAO,MAAMsB,cAAc,GAAItB,EAAE,IAAKtD,GAAG,CAAC8D,MAAM,CAAC,eAAeR,EAAE,OAAO,CAAC;AAC1E,OAAO,MAAMuB,oBAAoB,GAAGA,CAAA,KAAM7E,GAAG,CAACiC,GAAG,CAAC,mBAAmB,CAAC;AACtE,OAAO,MAAM6C,gBAAgB,GAAIxB,EAAE,IAAKtD,GAAG,CAACiC,GAAG,CAAC,eAAeqB,EAAE,eAAe,CAAC;;AAEjF;AACA,OAAO,MAAMyB,cAAc,GAAGA,CAACzB,EAAE,EAAE0B,YAAY,KAAK;EAClD,MAAMnD,QAAQ,GAAG,IAAI4B,QAAQ,CAAC,CAAC;EAC/B5B,QAAQ,CAACsB,MAAM,CAAC,SAAS,EAAE6B,YAAY,CAACC,OAAO,CAAC;EAChDD,YAAY,CAACE,SAAS,CAAClC,OAAO,CAACmC,GAAG,IAAItD,QAAQ,CAACsB,MAAM,CAAC,WAAW,EAAEgC,GAAG,CAAC,CAAC;EAExE,OAAOnF,GAAG,CAAC8B,IAAI,CAAC,eAAewB,EAAE,YAAY,EAAEzB,QAAQ,EAAE;IACvDf,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMsE,cAAc,GAAI9B,EAAE,IAAKtD,GAAG,CAACiC,GAAG,CAAC,eAAeqB,EAAE,YAAY,CAAC;AAC5E,OAAO,MAAM+B,gBAAgB,GAAGA,CAAA,KAAMrF,GAAG,CAACiC,GAAG,CAAC,eAAe,CAAC;AAC9D,OAAO,MAAMqD,sBAAsB,GAAGA,CAAA,KAAMtF,GAAG,CAACiC,GAAG,CAAC,qBAAqB,CAAC;AAC1E,OAAO,MAAMsD,iBAAiB,GAAGA,CAACjC,EAAE,EAAEkC,MAAM,KAAKxF,GAAG,CAAC4D,KAAK,CAAC,cAAcN,EAAE,EAAE,EAAE;EAAEkC;AAAO,CAAC,CAAC;AAC1F,OAAO,MAAMC,cAAc,GAAInC,EAAE,IAAKtD,GAAG,CAAC8D,MAAM,CAAC,cAAcR,EAAE,EAAE,CAAC;AACpE,OAAO,MAAMoC,+BAA+B,GAAIC,UAAU,IACxD3F,GAAG,CAAC4D,KAAK,CAAC,cAAc+B,UAAU,oBAAoB,CAAC;;AAEzD;AACA,OAAO,MAAMC,qBAAqB,GAAItC,EAAE,IAAKtD,GAAG,CAACiC,GAAG,CAAC,eAAeqB,EAAE,WAAW,CAAC;AAClF,OAAO,MAAMuC,kBAAkB,GAAGA,CAACvC,EAAE,EAAEwC,OAAO,KAAK9F,GAAG,CAAC8B,IAAI,CAAC,eAAewB,EAAE,WAAW,EAAE;EAAEyC,IAAI,EAAED;AAAQ,CAAC,CAAC;AAC5G,OAAO,MAAME,aAAa,GAAI1C,EAAE,IAAKtD,GAAG,CAAC8D,MAAM,CAAC,aAAaR,EAAE,EAAE,CAAC;;AAElE;;AAEA,OAAO,MAAM2C,kBAAkB,GAAGA,CAAA,KAAMjG,GAAG,CAACiC,GAAG,CAAC,6BAA6B,CAAC;AAC9E,OAAO,MAAMiE,aAAa,GAAIC,cAAc,IAAKnG,GAAG,CAACiC,GAAG,CAAC,iBAAiBkE,cAAc,EAAE,CAAC;AAC3F,OAAO,MAAMC,WAAW,GAAIC,WAAW,IAAKrG,GAAG,CAAC8B,IAAI,CAAC,oBAAoB,EAAEuE,WAAW,CAAC;AAEvF,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,WAAW,EAAEtB,OAAO,KACvDjF,GAAG,CAAC8B,IAAI,CAAC,mBAAmB,EAAE;EAAEyE,WAAW;EAAER,IAAI,EAAEd;AAAQ,CAAC,CAAC;AAC/D,OAAO,MAAMuB,UAAU,GAAIL,cAAc,IACvCnG,GAAG,CAAC4D,KAAK,CAAC,iBAAiBuC,cAAc,OAAO,CAAC;AAEnD,OAAO,MAAMM,cAAc,GAAGA,CAAA,KAAMzG,GAAG,CAACiC,GAAG,CAAC,4BAA4B,CAAC;;AAGzE;AACA,OAAO,MAAMyE,gBAAgB,GAAGA,CAAA,KAAM1G,GAAG,CAACiC,GAAG,CAAC,WAAW,CAAC;AAC1D,OAAO,MAAM0E,aAAa,GAAIC,WAAW,IAAK;EAC5C,MAAM/E,QAAQ,GAAG,IAAI4B,QAAQ,CAAC,CAAC;EAC/BX,MAAM,CAACC,OAAO,CAAC6D,WAAW,CAAC,CAAC5D,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;IACpD,IAAID,GAAG,KAAK,QAAQ,IAAIC,KAAK,EAAE;MAC7BrB,QAAQ,CAACsB,MAAM,CAAC,QAAQ,EAAED,KAAK,CAAC;IAClC,CAAC,MAAM;MACLrB,QAAQ,CAACsB,MAAM,CAACF,GAAG,EAAEC,KAAK,CAAC;IAC7B;EACF,CAAC,CAAC;EACF,OAAOlD,GAAG,CAAC4D,KAAK,CAAC,WAAW,EAAE/B,QAAQ,EAAE;IACtCf,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAM+F,eAAe,GAAI3B,SAAS,IAAK;EAC5C,MAAMrD,QAAQ,GAAG,IAAI4B,QAAQ,CAAC,CAAC;EAC/ByB,SAAS,CAAClC,OAAO,CAACmC,GAAG,IAAItD,QAAQ,CAACsB,MAAM,CAAC,WAAW,EAAEgC,GAAG,CAAC,CAAC;EAC3D,OAAOnF,GAAG,CAAC8B,IAAI,CAAC,kBAAkB,EAAED,QAAQ,EAAE;IAC5Cf,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;;AAGD;AACA,OAAO,MAAMgG,iBAAiB,GAAI5C,eAAe,IAAKlE,GAAG,CAAC8B,IAAI,CAAC,eAAe,EAAEoC,eAAe,CAAC;AAChG,OAAO,MAAM6C,uBAAuB,GAAIC,UAAU,IAAKhH,GAAG,CAACiC,GAAG,CAAC,eAAe+E,UAAU,eAAe,CAAC;AACxG,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAMjH,GAAG,CAACiC,GAAG,CAAC,qBAAqB,CAAC;;AAGvE;AACA,OAAO,MAAMiF,qBAAqB,GAAGA,CAAA,KAAMlH,GAAG,CAACiC,GAAG,CAAC,0BAA0B,CAAC;AAC9E,OAAO,MAAMkF,sBAAsB,GAAGA,CAAA,KAAMnH,GAAG,CAACiC,GAAG,CAAC,2BAA2B,CAAC;AAChF,OAAO,MAAMmF,wBAAwB,GAAI9D,EAAE,IAAKtD,GAAG,CAACiC,GAAG,CAAC,gCAAgCqB,EAAE,EAAE,CAAC;AAC7F,OAAO,MAAM+D,eAAe,GAAI/D,EAAE,IAAKtD,GAAG,CAAC4D,KAAK,CAAC,oBAAoBN,EAAE,UAAU,CAAC;AAClF,OAAO,MAAMgE,cAAc,GAAIhE,EAAE,IAAKtD,GAAG,CAACuH,CAAC,CAAC,oBAAoBjE,EAAE,SAAS,CAAC;AAC5E,OAAO,MAAMkE,eAAe,GAAIlE,EAAE,IAAKtD,GAAG,CAAC4D,KAAK,CAAC,qBAAqBN,EAAE,UAAU,CAAC;AACnF,OAAO,MAAMmE,cAAc,GAAInE,EAAE,IAAKtD,GAAG,CAAC4D,KAAK,CAAC,qBAAqBN,EAAE,SAAS,CAAC;AACjF,OAAO,MAAMoE,aAAa,GAAGA,CAAA,KAAM1H,GAAG,CAACiC,GAAG,CAAC,cAAc,CAAC;AAC1D,OAAO,MAAM0F,gBAAgB,GAAGA,CAACrE,EAAE,EAAE/B,MAAM,KAAKvB,GAAG,CAAC4D,KAAK,CAAC,gBAAgBN,EAAE,EAAE,EAAE;EAAE/B;AAAO,CAAC,CAAC;AAC3F,OAAO,MAAMqG,mBAAmB,GAAGA,CAAA,KAAM5H,GAAG,CAACiC,GAAG,CAAC,wBAAwB,CAAC;AAC1E,OAAO,MAAM4F,mBAAmB,GAAGA,CAAA,KAAM7H,GAAG,CAACiC,GAAG,CAAC,2BAA2B,CAAC;;AAE7E;AACA,OAAO,MAAM6F,oBAAoB,GAAGA,CAAA,KAAM9H,GAAG,CAACiC,GAAG,CAAC,mBAAmB,CAAC;AACtE,OAAO,MAAM8F,uBAAuB,GAAIxG,MAAM,IAAKvB,GAAG,CAACiC,GAAG,CAAC,+BAA+BV,MAAM,EAAE,CAAC;AACnG,OAAO,MAAMyG,uBAAuB,GAAGA,CAAA,KAAMhI,GAAG,CAACiC,GAAG,CAAC,6BAA6B,CAAC;AACnF,OAAO,MAAMgG,2BAA2B,GAAGA,CAAA,KAAMjI,GAAG,CAACiC,GAAG,CAAC,kCAAkC,CAAC;;AAE5F;AACA,OAAO,MAAMiG,sBAAsB,GAAGA,CAAA,KAAMlI,GAAG,CAACiC,GAAG,CAAC,qBAAqB,CAAC;AAC1E,OAAO,MAAMkG,uBAAuB,GAAI5G,MAAM,IAAKvB,GAAG,CAACiC,GAAG,CAAC,+BAA+BV,MAAM,EAAE,CAAC;AACnG,OAAO,MAAM6G,kBAAkB,GAAGA,CAAA,KAAMpI,GAAG,CAACiC,GAAG,CAAC,2BAA2B,CAAC;AAC5E,OAAO,MAAMoG,qBAAqB,GAAGA,CAAA,KAAMrI,GAAG,CAACiC,GAAG,CAAC,8BAA8B,CAAC;AAElF,eAAejC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}